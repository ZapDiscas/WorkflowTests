name: "Run GHAST Action Scenarios"

on:
  workflow_dispatch:
    inputs:
      action_ref:
        description: "A branch/ref da action a ser testada em ZapDiscas/WorkflowTemplates"
        required: true
        default: 'main'

jobs:
  test-action-scenarios:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - scenario: "Target: main | Severity: critical -> SUCCESS"
            branch: 'main'
            repo_target: 'ZapDiscas/dummie-repo'
            severity_level: 'critical'
            expected_outcome: 'success'
          - scenario: "Target: feat-critical-vuln | Severity: high -> FAILURE"
            branch: 'feat-critical-vuln'
            repo_target: 'ZapDiscas/dummie-repo'
            severity_level: 'high'
            expected_outcome: 'failure'
          - scenario: "Target: dev-medium-vuln | Severity: medium -> FAILURE"
            branch: 'dev-medium-vuln'
            repo_target: 'ZapDiscas/dummie-repo'
            severity_level: 'medium'
            expected_outcome: 'failure'

    name: ${{ matrix.scenario }}
    steps:
      # ===================================================================
      # ✨ CORREÇÃO AQUI ✨
      # ===================================================================

      # Passo 1: Fazer o checkout do código da action que queremos testar.
      # Usamos o input do workflow_dispatch para pegar a branch correta (ex: a branch do PR).
      - name: Checkout Reusable Action Code
        uses: actions/checkout@v4
        with:
          repository: ZapDiscas/WorkflowTemplates
          # A sintaxe correta para acessar o input é github.event.inputs
          ref: ${{ github.event.inputs.action_ref }}
          path: '.github/reusable-action' # Baixa para uma pasta específica

      # Passo 2: Executar a action a partir do caminho local que acabamos de baixar.
      - name: Run GHAST Check on Target Branch
        id: ghast_check
        # Agora usamos o caminho local
        uses: ./.github/reusable-action/.github/actions/ghas-check
        continue-on-error: true
        with:
          token: ${{ secrets.GHAS_READER_TOKEN }}
          target_repo: ${{ matrix.repo_target }}
          target_branch: ${{ matrix.branch }}
          dependabot_severity: ${{ matrix.severity_level }}
          codeql_severity: ${{ matrix.severity_level }}

      - name: Validate Test Outcome
        shell: bash
        run: |
          echo "Cenário: ${{ matrix.scenario }}"
          echo "Resultado esperado: ${{ matrix.expected_outcome }}"
          echo "Resultado da action: ${{ steps.ghast_check.outcome }}"
          if [ "${{ matrix.expected_outcome }}" == "${{ steps.ghast_check.outcome }}" ]; then
            echo "✅ O resultado do teste foi o esperado."
            exit 0
          else
            echo "❌ O resultado do teste foi diferente do esperado!"
            exit 1
          fi